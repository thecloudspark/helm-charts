{{- if .Values.result.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-result
  labels:
    app: result-app
spec:
  replicas: {{ .Values.result.replicas }}
  selector:
    matchLabels:
      app: result-app
  template:
    metadata:
      labels:
        app: result-app
    spec:
      serviceAccountName: {{ .Release.Name }}-{{ .Values.serviceAccount.name }}
      initContainers:
        - name: init
          image: busybox
          command: ["sh", "-c", "sleep 30s"]
      containers:
        - name: result-app
          image: {{ .Values.result.image }}
          ports:
            - containerPort: 5001
          resources:
{{ toYaml .Values.result.resources | indent 12 }}
          env:
          {{- if .Values.secret.enabled }}
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-voting-app
                  key: DB_HOST
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-voting-app
                  key: DB_USERNAME
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-voting-app
                  key: DB_PASSWORD
          {{- end }}

      {{- if .Values.result.tolerations }}
      tolerations:
{{ toYaml .Values.result.tolerations | indent 8 }}
      {{- end }}
        
      {{- if .Values.result.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.result.nodeSelector | indent 8 }}
      {{- end }}

      {{- if .Values.result.affinity }}
      affinity:
{{ toYaml .Values.result.affinity | indent 8 }}
      {{- end }}
{{- end -}}
